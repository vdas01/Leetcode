//https://leetcode.com/contest/biweekly-contest-103/problems/maximum-number-of-fish-in-a-grid/

class Solution {
public:
    int dfs(int i,int j,vector<vector<bool>>& visited,vector<vector<int>>& grid){
        int n = grid.size(),m=grid[0].size();
        if(i<0 || i>=n || j<0 || j>=m || grid[i][j] == 0)
            return 0;
        int sum = grid[i][j];
        visited[i][j] = true;
        grid[i][j] = 0;
        sum+=dfs(i+1,j,visited,grid);
        sum+=dfs(i-1,j,visited,grid);
        sum+=dfs(i,j+1,visited,grid);
        sum+=dfs(i,j-1,visited,grid);
        return sum;
    }
    int findMaxFish(vector<vector<int>>& grid) {
        int n = grid.size() , m =grid[0].size();
        vector<vector<bool>>visited(n,vector<bool>(m,false));
        int ans = INT_MIN;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!visited[i][j] && grid[i][j] > 0){
                    ans = max(ans,dfs(i,j,visited,grid));
                }
            }
        }
        return ans == INT_MIN ? 0 : ans;
    }
};
