//https://leetcode.com/contest/biweekly-contest-91/problems/number-of-distinct-averages/

class Solution {
public:
    int distinctAverages(vector<int>& nums) {
        priority_queue<int>pq1;
        priority_queue <int, vector<int>, greater<int> > pq2;
        for(int i=0;i<nums.size();i++){
            pq1.push(nums[i]);
            pq2.push(nums[i]);
        }
        unordered_set<float>s;
        while(!pq1.empty()){
            cout<<(pq1.top()+pq2.top())/2<<" "<<pq1.top()<<" "<<pq2.top()<<"\n";
            s.insert((pq1.top()+pq2.top())/2.0);
            pq1.pop();
            pq2.pop();
        }
        return s.size();
        
    }
};
