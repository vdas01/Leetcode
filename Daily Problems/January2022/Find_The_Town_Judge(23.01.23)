//https://leetcode.com/problems/find-the-town-judge/description/

class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        if(n==1)
        return 1;
         unordered_map<int,int>m;
         unordered_set<int>s;
         for(int i=0;i<trust.size();i++){
             int t = trust[i][0], judge = trust[i][1];
             m[judge]++;
             s.insert(t);
         }
         for(auto it:m){
             if(it.second == n-1 && s.find(it.first) == s.end())
             return it.first;
         }
         return -1;
    }
};



class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
       if(trust.empty() && n==1)
           return 1;
        vector<int>out(n+1,0);
        vector<int>in(n+1,0);
        for(int i=0;i<trust.size();i++){
            in[trust[i][1]]++;
            out[trust[i][0]]++;
        }
        for(int i=1;i<=n;i++){
            if(out[i]==0 && in[i]==n-1)
                return i;
        }
        return -1;
    }
};
