//https://leetcode.com/problems/longest-path-with-different-adjacent-characters/

class Solution {
public:
int ans = INT_MIN;
    int dfs(vector<bool>&visited,vector<vector<int>>&graph,string &s,int i,char adj='1'){
        visited[i] = true;
        
        int  fmax =0,smax=0;
        for(auto it:graph[i]){
            if(!visited[it]){
               int li = dfs(visited,graph,s,it,s[i]);
              if(fmax <= li){
                  smax = fmax;
                  fmax = li;
              }
              else if(smax < li)
              smax = li;
            }
        }
        ans = max(ans,fmax+smax+1);
        if(adj == s[i])
        return INT_MIN;
        return fmax+1;;
    }
    int longestPath(vector<int>& parent, string s) {
        int n = parent.size();
        vector<vector<int>>graph(n);
        for(int i=0;i<parent.size();i++){
            if(parent[i] != -1){
                graph[i].push_back(parent[i]);
                graph[parent[i]].push_back(i);
            }
        }
        vector<bool>visited(n,false);
        dfs(visited,graph,s,0);
        return ans;
    }
};

