//https://leetcode.com/problems/palindrome-partitioning/description/


class Solution {
public:
bool check(string curr){
    string ans = curr;
    reverse(curr.begin(),curr.end());
    return ans == curr;
}
void result(string s,vector<vector<string>>&ans,vector<string>v,int sr){
    if(sr == s.length()){
        if(v.size())
        ans.push_back(v);
    }
    string curr = "";
    for(int i=sr;i<s.length();i++){
        curr+=s[i];
        if(check(curr)){
            v.push_back(curr);
            result(s,ans,v,i+1);
            v.pop_back();
        }
    }
}
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>v;
        result(s,ans,v,0);
        return ans;
    }
};
