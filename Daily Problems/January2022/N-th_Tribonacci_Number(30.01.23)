//https://leetcode.com/problems/n-th-tribonacci-number/description/



class Solution {
public:
    int result(vector<int>&dp,int n){
        if(dp[n] != -1)
        return dp[n];
       
        return dp[n] = ( result(dp,n-3) + result(dp,n-2) + result(dp,n-1));
    }
    int tribonacci(int n) {
        if(n==1 || n== 2)
        return 1;
        if(n == 0)
        return 0;
       vector<int>dp(n+1,-1);
       dp[0] = 0;
       dp[1] = 1;
       dp[2] = 1;
       for(int i=3;i<=n;i++){
           dp[i] = dp[i-3] + dp[i-2] + dp[i-1];
       }
       return dp[n];
    }
};
