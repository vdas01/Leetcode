//https://leetcode.com/problems/range-sum-of-bst/description/


//BFS:-
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        int ans=0;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int n = q.size();
            for(int i=0;i<n;i++){
                TreeNode *temp = q.front();
                q.pop();
                if(temp->val >=low && temp->val<=high)
                ans+=temp->val;
                if(temp->left)
                q.push(temp->left);
                if(temp->right)
                q.push(temp->right);
            }
        }
        return ans;
    }
};

//DFS:-
class Solution {
public:
    void result(TreeNode* root,int low,int high,int &ans){
        if(!root)
        return;
        if(root->val >=low && root->val<=high)
        ans+=root->val;
        if(root->left)
        result(root->left,low,high,ans);
        if(root->right)
        result(root->right,low,high,ans);
    }
    int rangeSumBST(TreeNode* root, int low, int high) {
        int ans = 0;
        result(root,low,high,ans);
        return ans;
    }
};
