//https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/description/
class Solution {
public:
int addi(TreeNode* root){
    if(!root)
    return 0;
    int sum = 0;
    sum+= addi(root->left);
    sum+= addi(root->right);
    sum+=root->val;
    return sum;
}
long long ans = INT_MIN;
int mod = 1e9 + 7;
long long result(TreeNode *root,int msum){
    if(!root)
    return 0;
    int sum=0;
    sum+= result(root->left,msum);
    sum+= result(root->right,msum);
     sum+=root->val;
     long long sum2 = msum - sum;
     long long pro1 = sum2*sum;
     ans = max(ans,pro1);
     return sum;
}
    int maxProduct(TreeNode* root) {
        if(!root)
        return 0;
       int msum = addi(root);
       result(root,msum);
       return ans%mod;
    }
};
