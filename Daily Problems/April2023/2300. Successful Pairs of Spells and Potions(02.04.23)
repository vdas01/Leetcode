//https://leetcode.com/problems/successful-pairs-of-spells-and-potions/description/


class Solution {
public:
   long long result(vector<int>& potions,long long num,long long success){
       int n = potions.size();
       int low = 0,high = n-1;
       while(high - low > 1){
           int mid = low + ((high-low)/2);
           long long mul = num*potions[mid];
           if(mul >= success){
               high = mid;
           }
           else if(mul < success)
           low = mid+1;
       }
       if(potions[low] * num >= success)
       return low;
       if(potions[high] * num >= success)
       return high;
       
       return -1;
   }
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        sort(potions.begin(),potions.end());
        vector<int>ans;
        long long n = potions.size();
        for(int i=0;i<spells.size();i++){
             int num = spells[i];
             int index = result(potions,num,success);
             if(index==-1)
             ans.push_back(0);
             else
             ans.push_back(n-index);
        }
       return ans; 
    }
};
