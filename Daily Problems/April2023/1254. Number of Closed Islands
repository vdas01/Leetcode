//https://leetcode.com/problems/number-of-closed-islands/description/

class Solution {
public:
    bool result(vector<vector<int>>&grid,int i,int j){
        int n = grid.size(),m = grid[0].size();
        if(i < 0 || i>=n || j <0 || j>=m )
        return false;
        if(grid[i][j] == 1)
        return true;
        grid[i][j] = 1;
        bool left = result(grid,i,j-1);
        bool right = result(grid,i,j+1);
        bool up = result(grid,i-1,j);
        bool down = result(grid,i+1,j);

       return left && right && up && down;
    }
    int closedIsland(vector<vector<int>>& grid) {
        int n = grid.size(),m = grid[0].size();
       
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if( grid[i][j] == 0){
                   if(result(grid,i,j))
                     count++;
                }
            }
        }
        return count;
    }
};
