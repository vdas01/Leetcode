//https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/description/

class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {
        //no of subsequences in range [l,r] = 2^(l-r);
        int n = nums.size();
        sort(nums.begin(),nums.end());
        int mod = 1e9 + 7;
        vector<int>poww(n);
        poww[0] = 1;
        for(int i=1;i<n;i++){
            poww[i] = (poww[i-1]*2)%mod;
        }
        int ans = 0;
        int i = 0, j = n-1;
        while(i <= j){
            if(nums[i] + nums[j] > target)
            j--;
            else{
            ans =ans%mod + (poww[j-i]%mod);
            i++;
            }
        }
        return ans;
    }
};
